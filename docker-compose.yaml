services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pet_todo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pet_todo"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  db-service:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/pet_todo?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  api-service:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      KAFKA_URL: kafka:29092
    depends_on:
      - db-service
      - kafka
    restart: unless-stopped

  kafka-service:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    environment:
      KAFKA_URL: kafka:29092
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: